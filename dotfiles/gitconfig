[include]
    path = ~/.git_user # Set the git user there

[alias]
	co = checkout
	st = status
	hist = log --pretty=format:\"%C(bold yellow)%h %C(reset)%C(cyan)%ad%C(reset)%C(red) | %C(bold blue)%s%C(reset)%C(red)%d %C(green)[%an]\" --graph --date=short
	update = !"f() { (git diff --exit-code > /dev/null && git fetch origin $(git rev-parse --abbrev-ref HEAD) && git reset --hard @{u} && echo \"\\033[32mBranch Updated\\033[0m\") || (echo \"\\033[31mRepo is Dirty, Update canceled!\\033[0m\"); }; f"
	find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
    show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"
	log-merge = "!f() { git hist \"$1^..$1\"; }; f"
	dft = difftool
	stash-staged = "!bash -c \"git stash --keep-index; git stash push -m \"staged\" --keep-index; git stash pop stash@{1}\""
[core]
	editor = nvim
[core]
	excludesfile = ~/.gitignore_global
[pull]
	ff = only
[push]
	default = current
[merge]
	ff = false
	tool = diffconflicts
[oh-my-zsh]
	hide-status = 1
	hide-dirty = 1
[mergetool "diffconflicts"]
	cmd = nvim -c DiffConflictsWithHistory \"$MERGED\" \"$BASE\" \"$LOCAL\" \"$REMOTE\"
	trustExitCode = true
[mergetool]
	keepBackup = false
[diff]
	tool = difftastic
[difftool]
	prompt = false
[difftool "difftastic"]
	cmd = difft "$LOCAL" "$REMOTE"
[pager]
	difftool = true
