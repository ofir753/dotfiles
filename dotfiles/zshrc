# Profile zsh
# zmodload zsh/zprof

# Set time format for `time`
TIMEFMT=$'\n================\nCPU\t%P\nuser\t%*U\nsystem\t%*S\ntotal\t%*E'

# Check if remote
IS_REMOTE=false
if test -f "$HOME/.remote_indicator"; then
  IS_REMOTE=true
fi

NO_SUDO=false
if test -f "$HOME/.no_sudo_indicator"; then
  NO_SUDO=true
fi

# Export Local pkgs if on remote (non-root usage)
if $NO_SUDO; then
  export PATH="$HOME/pkgs/usr/sbin:$HOME/pkgs/usr/bin:$HOME/pkgs/bin:$PATH"
  export MANPATH="$HOME/pkgs/usr/share/man:$MANPATH"

  L='/lib:/lib64:/usr/lib:/usr/lib64'
  export LD_LIBRARY_PATH="$HOME/pkgs/usr/lib:$HOME/pkgs/usr/lib64:$L"
  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
fi

export ZSH="$HOME/.oh-my-zsh"

ZSH_THEME="ofir"

DISABLE_AUTO_TITLE="true"

DISABLE_UNTRACKED_FILES_DIRTY="true"

# TMUX
ZSH_TMUX_AUTOSTART=false
ZSH_TMUX_AUTOSTART_ONCE=false
ZSH_TMUX_AUTOQUIT=false
ZSH_TMUX_FIXTERM=false

# FZF History
ZSH_FZF_HISTORY_SEARCH_FZF_EXTRA_ARGS='--height=10 --reverse'

# autoupdate
export UPDATE_ZSH_DAYS=2

plugins=()

if [[ ${ZSH_VERSION:0:3} -ge 5.8 ]]; then
	# FZF Tab settings
	# disable sort when completing `git checkout`
	zstyle ':completion:*:git-checkout:*' sort false
	# set descriptions format to enable group support
	zstyle ':completion:*:descriptions' format '[%d]'
	# set list-colors to enable filename colorizing
	zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
	# preview directory's content with exa when completing cd
	zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls -1 --color=always $realpath'
	# switch group using `,` and `.`
	zstyle ':fzf-tab:*' switch-group ',' '.'

	# TODO: try to update remote zsh
	# Local plugins only (newer zsh)
	plugins+=(fzf-tab)
fi

plugins+=(
  autoupdate
  gitfast
  zsh-autosuggestions
  colored-man-pages
  pip
  zsh-completions
  tmux
  rust
  git-open
  sudo
  dircycle
  up
  # zsh-vi-mode
  zsh-fzf-history-search
  )

source $ZSH/oh-my-zsh.sh

# User configuration

# Expand dotfiles_scripts to path
export PATH=~/.local/bin:~/dotfiles_scripts:$PATH

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Binds
bindkey -M main "^ " autosuggest-accept # Ctrl+Space
bindkey -M vicmd "^ " autosuggest-accept # Ctrl+Space
bindkey "^ " autosuggest-accept # Ctrl+Space

# Aliases
alias ll='ls -alF'
alias pwdc='echo \"$(pwd)\" | tr -d "\n" | toclip'
alias pwdcd='echo "cd \"$(pwd)\"" | toclip'
alias sublp='subl *.sublime-project'
alias open='xdg-open'
alias venv='. ~/venv3/bin/activate'
alias notify='notify-send -u critical -t 3000 done'
alias notify-send='notify-send.sh -f'
alias get_ticket='git rev-parse --abbrev-ref HEAD | grep -oP ".+/\K([A-Z]+-[0-9]+)" | tr -d "\n"'
alias cticket='get_ticket | toclip'
alias ticket='xdg-open https://jira.infinidat.com/browse/$(get_ticket)'
alias cbranch='git rev-parse --abbrev-ref HEAD | tr -d "\n" | toclip'
alias tkill='tmux kill-session'
alias trename='tmux rename-session'
alias taskopen-fzf='taskopen -l | sed "s/ *[0-9]*) //" | sed "/^$/d" | fzf | sed "s/.*-- \([0-9]*\)/\1/" | sponge | { IFS= read -r x; { printf "%s\n" "$x"; cat; } | xargs taskopen }'
# alias cg='cd $(inner_cg.sh)'
function cg() { cd $(inner_cg.sh $@) }

# Git aliases (instead)
alias g='git'
alias ga='git add'
alias gc='git commit'
alias gcam='git commit -a -m'
alias gco='git checkout'
alias gd='git diff'
alias gf='git fetch'
alias gl='git pull'
alias gp='git push'
alias gst='git status'

# Remote/Local Aliases
if $IS_REMOTE; then
	alias toclip='~/dotfiles_scripts/osc52_yank.sh'
else
	alias toclip='xclip -sel clip'
fi

export EDITOR='vim'
if type nvim &> /dev/null; then
	alias vim='nvim'
	alias vi='nvim'
	alias rvim='/usr/bin/vim'
	export EDITOR='nvim'
fi

# compinit once a day (slows down zshrc)
function {
    setopt LOCAL_OPTIONS extendedglob
    if [[ ! -e "${ZSH_COMPDUMP}" || -n "${ZSH_COMPDUMP}"(#qNY1.mh+24) ]]; then
		autoload -U compinit && compinit
    fi
}
# completion for zfunc (python typer)
autoload -Uz compinit
zstyle ':completion:*' menu select
fpath+=~/.zfunc

# Local Settings
if ! $IS_REMOTE; then
	. "$HOME/.cargo/env" # Rust

	xmodmap ~/.xmodmaprc 2> /dev/null # key mapping, xev to see keys
	xset r rate 200 35 # Faster repeat rate
fi

# Load wslrc
if [[ $(uname -a) == *"WSL"* ]]; then
  source ~/.wslrc
fi

# Extra utils not in dotfiles
if test -f $HOME/.extra_utils; then
	source $HOME/.extra_utils
fi

# Daemons
if ! $IS_REMOTE; then
  if ! pgrep fusuma > /dev/null;
  then
    fusuma --daemon
  fi

  if ! pgrep autokey-gtk > /dev/null;
  then
    daemon --name="autokey" autokey-gtk
  fi

  if ! pgrep --full kupfer > /dev/null;
  then
    daemon --name="kupfer" -- kupfer --no-splash
  fi

fi

export ZSH_TMUX_ALWAYS_SELECT_SESSION=true

# zprof # Finish profiling

# Must be at the end
if ! $IS_REMOTE; then
	$HOME/.tmux/tmux-go/src/tmux_go_attach.sh
fi
select_tmux_session.sh
