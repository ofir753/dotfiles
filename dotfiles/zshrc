# Check if remote
IS_REMOTE=false
if test -f "$HOME/.remote_indicator"; then
  IS_REMOTE=true
fi

# Export Local pkgs if on remote (non-root usage)
if $IS_REMOTE; then
  export PATH="$HOME/pkgs/usr/sbin:$HOME/pkgs/usr/bin:$HOME/pkgs/bin:$PATH"
  export MANPATH="$HOME/pkgs/usr/share/man:$MANPATH"

  L='/lib:/lib64:/usr/lib:/usr/lib64'
  export LD_LIBRARY_PATH="$HOME/pkgs/usr/lib:$HOME/pkgs/usr/lib64:$L"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="ofir"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# TMUX
ZSH_TMUX_AUTOSTART=false
ZSH_TMUX_AUTOSTART_ONCE=false
ZSH_TMUX_AUTOQUIT=false
ZSH_TMUX_FIXTERM=false

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  zsh-autosuggestions
  colored-man-pages
  pip
  zsh-completions
  tmux
  cargo
  git-open
  sudo
  dircycle
  )

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'z
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias ll='ls -alF'
alias toclip='xclip -sel clip'
alias pwdc='echo \"$(pwd)\" | tr -d "\n" | toclip'
alias pwdcd='echo "cd \"$(pwd)\"" | toclip'
alias sublp='subl *.sublime-project'
alias open='xdg-open'
alias venv='. ~/venv3/bin/activate'
alias notify='notify-send -u critical -t 3000 done'
alias notify-send='notify-send.sh -f'

export EDITOR='vim'
if type nvim &> /dev/null; then
	alias vim='nvim'
	alias vi='nvim'
	alias rvim='/usr/bin/vim'
	export EDITOR='nvim'
fi

# Binds
bindkey "\C-r" history-incremental-pattern-search-backward

autoload -U compinit && compinit

if ! $IS_REMOTE; then
  . "$HOME/.cargo/env"
fi
export PATH=~/.local/bin:~/dotfiles_scripts:$PATH

# Load wslrc
if [[ $(uname -a) == *"WSL"* ]]; then
  source ~/.wslrc
fi

TIMEFMT=$'\n================\nCPU\t%P\nuser\t%*U\nsystem\t%*S\ntotal\t%*E'

ZSH_TMUX_ALWAYS_SELECT_SESSION=true

function select_tmux_session() {
  if tmux has;
  then
    echo "Select tmux session to attach to"
    select sel in "Create New Session" "tmp Session" "No Session" $(tmux ls -F '#S'); do
      case $sel in
        "Create New Session")
        echo "Enter Session Name: "
        read session_name
        tmux new-session -s $session_name
        ;;
        "tmp Session")
        session_name="_tmp-$(uuidgen | cut -c1-8)"
        tmux new-session -s $session_name
        tmux kill-session -t $session_name
        echo "$session_name Killed"
        ;;
        "No Session")
        return
        ;;
        "q")
        return
        ;;
        "quit")
        return
        ;;
        *)
          if [ "$sel" ]
          then
            tmux attach -t "$sel"
          else
            tmux attach -t "*$REPLY*"
          fi
        ;;
      esac
    done
  else
    tmux
  fi

  if [[ "$ZSH_TMUX_ALWAYS_SELECT_SESSION" == "true" ]]; then
    select_tmux_session
  fi
}

# Exporting fzf defualt command to be rg
if type rg &> /dev/null; then
  export FZF_DEFAULT_COMMAND='rg --files'
  export FZF_DEFAULT_OPTS='-m'
fi

if test -f $HOME/.extra_utils; then
	source $HOME/.extra_utils
fi

# Daemons
if ! $IS_REMOTE; then
  if ! pgrep fusuma > /dev/null;
  then
    fusuma --daemon
  fi

  if ! pgrep autokey-gtk > /dev/null;
  then
    daemon --name="autokey" autokey-gtk
  fi 
fi

# Must be at the end
if ! [ -n "$TMUX" ]
then
  select_tmux_session
fi
