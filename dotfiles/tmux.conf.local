# : << EOF
# https://github.com/gpakosz/.tmux
# (‚Äë‚óè‚Äë‚óè)> dual licensed under the WTFPL v2 license and the MIT license,
#         without any warranty.
#         Copyright 2012‚Äî Gregory Pakosz (@gpakosz).


# -- navigation ----------------------------------------------------------------

# if you're running tmux within iTerm2
#   - and tmux is 1.9 or 1.9a
#   - and iTerm2 is configured to let option key act as +Esc
#   - and iTerm2 is configured to send [1;9A -> [1;9D for option + arrow keys
# then uncomment the following line to make Meta + arrow keys mapping work
#set -ga terminal-overrides "*:kUP3=\e[1;9A,*:kDN3=\e[1;9B,*:kRIT3=\e[1;9C,*:kLFT3=\e[1;9D"


# -- windows & pane creation ---------------------------------------------------

# new window retains current path, possible values are:
#   - true
#   - false (default)
tmux_conf_new_window_retain_current_path=true

# new pane retains current path, possible values are:
#   - true (default)
#   - false
tmux_conf_new_pane_retain_current_path=true

# new pane tries to reconnect ssh sessions (experimental), possible values are:
#   - true
#   - false (default)
tmux_conf_new_pane_reconnect_ssh=false

# prompt for session name when creating a new session, possible values are:
#   - true
#   - false (default)
tmux_conf_new_session_prompt=false


# -- display -------------------------------------------------------------------

# RGB 24-bit colour support (tmux >= 2.2), possible values are:
#  - true
#  - false (default)
tmux_conf_24b_colour=true

# default theme
tmux_conf_theme_colour_1="#080808"    # dark gray
tmux_conf_theme_colour_2="#303030"    # gray
tmux_conf_theme_colour_3="#8a8a8a"    # light gray
tmux_conf_theme_colour_4="#00afff"    # light blue
tmux_conf_theme_colour_5="#ffff00"    # yellow
tmux_conf_theme_colour_6="#080808"    # dark gray
tmux_conf_theme_colour_7="#e4e4e4"    # white
tmux_conf_theme_colour_8="#080808"    # dark gray
tmux_conf_theme_colour_9="#ffff00"    # yellow
tmux_conf_theme_colour_10="#ff00af"   # pink
tmux_conf_theme_colour_11="#5fff00"   # green
tmux_conf_theme_colour_12="#8a8a8a"   # light gray
tmux_conf_theme_colour_13="#e4e4e4"   # white
tmux_conf_theme_colour_14="#080808"   # dark gray
tmux_conf_theme_colour_15="#080808"   # dark gray
tmux_conf_theme_colour_16="#d70000"   # red
tmux_conf_theme_colour_17="#e4e4e4"   # white

# default theme (ansi)
#tmux_conf_theme_colour_1="colour0"
#tmux_conf_theme_colour_2="colour8"
#tmux_conf_theme_colour_3="colour8"
#tmux_conf_theme_colour_4="colour14"
#tmux_conf_theme_colour_5="colour11"
#tmux_conf_theme_colour_6="colour0"
#tmux_conf_theme_colour_7="colour15"
#tmux_conf_theme_colour_8="colour0"
#tmux_conf_theme_colour_9="colour11"
#tmux_conf_theme_colour_10="colour13"
#tmux_conf_theme_colour_11="colour10"
#tmux_conf_theme_colour_12="colour8"
#tmux_conf_theme_colour_13="colour15"
#tmux_conf_theme_colour_14="colour0"
#tmux_conf_theme_colour_15="colour0"
#tmux_conf_theme_colour_16="colour1"
#tmux_conf_theme_colour_17="colour15"

# window style
tmux_conf_theme_window_fg="default"
tmux_conf_theme_window_bg="default"

# highlight focused pane (tmux >= 2.1), possible values are:
#   - true
#   - false (default)
tmux_conf_theme_highlight_focused_pane=false

# focused pane colours:
tmux_conf_theme_focused_pane_bg="$tmux_conf_theme_colour_2"

# pane border style, possible values are:
#   - thin (default)
#   - fat
tmux_conf_theme_pane_border_style=thin

# pane borders colours:
tmux_conf_theme_pane_border="$tmux_conf_theme_colour_2"
tmux_conf_theme_pane_active_border="$tmux_conf_theme_colour_4"

# pane indicator colours (when you hit <prefix> + q)
tmux_conf_theme_pane_indicator="$tmux_conf_theme_colour_4"
tmux_conf_theme_pane_active_indicator="$tmux_conf_theme_colour_4"

# status line style
tmux_conf_theme_message_fg="$tmux_conf_theme_colour_1"
tmux_conf_theme_message_bg="$tmux_conf_theme_colour_5"
tmux_conf_theme_message_attr="bold"

# status line command style (<prefix> : Escape)
tmux_conf_theme_message_command_fg="$tmux_conf_theme_colour_5"
tmux_conf_theme_message_command_bg="$tmux_conf_theme_colour_1"
tmux_conf_theme_message_command_attr="bold"

# window modes style
tmux_conf_theme_mode_fg="$tmux_conf_theme_colour_1"
tmux_conf_theme_mode_bg="$tmux_conf_theme_colour_5"
tmux_conf_theme_mode_attr="bold"

# status line style
tmux_conf_theme_status_fg="$tmux_conf_theme_colour_3"
tmux_conf_theme_status_bg="$tmux_conf_theme_colour_1"
tmux_conf_theme_status_attr="none"

# terminal title
#   - built-in variables are:
#     - #{circled_window_index}
#     - #{circled_session_name}
#     - #{hostname}
#     - #{hostname_ssh}
#     - #{hostname_full}
#     - #{hostname_full_ssh}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_terminal_title="#h tmux-go-session:#S ‚óè #I #W"

# window status style
#   - built-in variables are:
#     - #{circled_window_index}
#     - #{circled_session_name}
#     - #{hostname}
#     - #{hostname_ssh}
#     - #{hostname_full}
#     - #{hostname_full_ssh}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_window_status_fg="$tmux_conf_theme_colour_3"
tmux_conf_theme_window_status_bg="$tmux_conf_theme_colour_1"
tmux_conf_theme_window_status_attr="none"
tmux_conf_theme_window_status_format="#I #W"
#tmux_conf_theme_window_status_format="#{circled_window_index} #W"
#tmux_conf_theme_window_status_format="#I #W#{?window_bell_flag,üîî,}#{?window_zoomed_flag,üîç,}"

# window current status style
#   - built-in variables are:
#     - #{circled_window_index}
#     - #{circled_session_name}
#     - #{hostname}
#     - #{hostname_ssh}
#     - #{hostname_full}
#     - #{hostname_full_ssh}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_window_status_current_fg="$tmux_conf_theme_colour_1"
tmux_conf_theme_window_status_current_bg="$tmux_conf_theme_colour_4"
tmux_conf_theme_window_status_current_attr="bold"
tmux_conf_theme_window_status_current_format="#I #W"
#tmux_conf_theme_window_status_current_format="#{circled_window_index} #W"
#tmux_conf_theme_window_status_current_format="#I #W#{?window_zoomed_flag,üîç,}"

# window activity status style
tmux_conf_theme_window_status_activity_fg="default"
tmux_conf_theme_window_status_activity_bg="default"
tmux_conf_theme_window_status_activity_attr="underscore"

# window bell status style
tmux_conf_theme_window_status_bell_fg="$tmux_conf_theme_colour_5"
tmux_conf_theme_window_status_bell_bg="default"
tmux_conf_theme_window_status_bell_attr="blink,bold"

# window last status style
tmux_conf_theme_window_status_last_fg="$tmux_conf_theme_colour_4"
tmux_conf_theme_window_status_last_bg="$tmux_conf_theme_colour_2"
tmux_conf_theme_window_status_last_attr="none"

# status left/right sections separators
tmux_conf_theme_left_separator_main=""
tmux_conf_theme_left_separator_sub="|"
tmux_conf_theme_right_separator_main=""
tmux_conf_theme_right_separator_sub="|"
#tmux_conf_theme_left_separator_main='\uE0B0'  # /!\ you don't need to install Powerline
#tmux_conf_theme_left_separator_sub='\uE0B1'   #   you only need fonts patched with
#tmux_conf_theme_right_separator_main='\uE0B2' #   Powerline symbols or the standalone
#tmux_conf_theme_right_separator_sub='\uE0B3'  #   PowerlineSymbols.otf font, see README.md

# status left/right content:
#   - separate main sections with "|"
#   - separate subsections with ","
#   - built-in variables are:
#     - #{battery_bar}
#     - #{battery_hbar}
#     - #{battery_percentage}
#     - #{battery_status}
#     - #{battery_vbar}
#     - #{circled_session_name}
#     - #{hostname_ssh}
#     - #{hostname}
#     - #{hostname_full}
#     - #{hostname_full_ssh}
#     - #{loadavg}
#     - #{mouse}
#     - #{pairing}
#     - #{prefix}
#     - #{root}
#     - #{synchronized}
#     - #{uptime_y}
#     - #{uptime_d} (modulo 365 when #{uptime_y} is used)
#     - #{uptime_h}
#     - #{uptime_m}
#     - #{uptime_s}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_status_left=" #{@mode_indicator_custom_prompt} | #S "
tmux_conf_theme_status_right=" #{prefix}#{mouse}#{pairing}#{synchronized} CPU #{cpu_percentage} RAM #{ram_percentage} , #{?battery_status,#{battery_status},}#{?battery_percentage, #{battery_percentage},} , %R , %d %b | #{username}#{root} [#{keyboard_layout}] | #{hostname} | #{@mode_indicator_custom_prompt}"
# CPU: #{cpu_percentage} RAM: #{ram_percentage}

# status left style
tmux_conf_theme_status_left_fg="$tmux_conf_theme_colour_16,$tmux_conf_theme_colour_6,$tmux_conf_theme_colour_7,$tmux_conf_theme_colour_8"
tmux_conf_theme_status_left_bg="$tmux_conf_theme_colour_15,$tmux_conf_theme_colour_9,$tmux_conf_theme_colour_10,$tmux_conf_theme_colour_11"
tmux_conf_theme_status_left_attr="bold,bold,none,none"

# status right style
tmux_conf_theme_status_right_fg="$tmux_conf_theme_colour_12,$tmux_conf_theme_colour_13,$tmux_conf_theme_colour_14,$tmux_conf_theme_colour_16"
tmux_conf_theme_status_right_bg="$tmux_conf_theme_colour_15,$tmux_conf_theme_colour_16,$tmux_conf_theme_colour_17,$tmux_conf_theme_colour_15"
tmux_conf_theme_status_right_attr="none,none,bold,bold"

# pairing indicator
tmux_conf_theme_pairing="‚öá"                 # U+2687
tmux_conf_theme_pairing_fg="none"
tmux_conf_theme_pairing_bg="none"
tmux_conf_theme_pairing_attr="none"

# prefix indicator
tmux_conf_theme_prefix="PREFIX"                  # U+2328
tmux_conf_theme_prefix_fg="none"
tmux_conf_theme_prefix_bg="none"
tmux_conf_theme_prefix_attr="none"

# mouse indicator
tmux_conf_theme_mouse="‚Üó"                   # U+2197
tmux_conf_theme_mouse_fg="none"
tmux_conf_theme_mouse_bg="none"
tmux_conf_theme_mouse_attr="none"

# root indicator
tmux_conf_theme_root="!"
tmux_conf_theme_root_fg="none"
tmux_conf_theme_root_bg="none"
tmux_conf_theme_root_attr="bold,blink"

# synchronized indicator
tmux_conf_theme_synchronized="‚öè"            # U+268F
tmux_conf_theme_synchronized_fg="none"
tmux_conf_theme_synchronized_bg="none"
tmux_conf_theme_synchronized_attr="none"

# battery bar symbols
tmux_conf_battery_bar_symbol_full="‚óº"
tmux_conf_battery_bar_symbol_empty="‚óª"
#tmux_conf_battery_bar_symbol_full="‚ô•"
#tmux_conf_battery_bar_symbol_empty="¬∑"

# battery bar length (in number of symbols), possible values are:
#   - auto
#   - a number, e.g. 5
tmux_conf_battery_bar_length="auto"

# battery bar palette, possible values are:
#   - gradient (default)
#   - heat
#   - "colour_full_fg,colour_empty_fg,colour_bg"
tmux_conf_battery_bar_palette="gradient"
#tmux_conf_battery_bar_palette="#d70000,#e4e4e4,#000000"   # red, white, black

# battery hbar palette, possible values are:
#   - gradient (default)
#   - heat
#   - "colour_low,colour_half,colour_full"
tmux_conf_battery_hbar_palette="gradient"
#tmux_conf_battery_hbar_palette="#d70000,#ff5f00,#5fff00"  # red, orange, green

# battery vbar palette, possible values are:
#   - gradient (default)
#   - heat
#   - "colour_low,colour_half,colour_full"
tmux_conf_battery_vbar_palette="gradient"
#tmux_conf_battery_vbar_palette="#d70000,#ff5f00,#5fff00"  # red, orange, green

# symbols used to indicate whether battery is charging or discharging
tmux_conf_battery_status_charging="#[fg=#5fff00]‚Üë"       # U+2191
tmux_conf_battery_status_discharging="#[fg=#d70000]‚Üì"    # U+2193
#tmux_conf_battery_status_charging="üîå"     # U+1F50C
#tmux_conf_battery_status_discharging="üîã"  # U+1F50B

# clock style (when you hit <prefix> + t)
# you may want to use %I:%M %p in place of %R in tmux_conf_theme_status_right
tmux_conf_theme_clock_colour="$tmux_conf_theme_colour_4"
tmux_conf_theme_clock_style="24"


# -- clipboard -----------------------------------------------------------------

# in copy mode, copying selection also copies to the OS clipboard
#   - true
#   - false (default)
# on macOS, this requires installing reattach-to-user-namespace, see README.md
# on Linux, this requires xsel or xclip
tmux_conf_copy_to_os_clipboard=true


# -- user customizations -------------------------------------------------------
# this is the place to override or undo settings

# increase history size
# set -g history-limit 5000

# start with mouse mode enabled
#set -g mouse on

# force Vi mode
#   really you should export VISUAL or EDITOR environment variable, see manual
set -g status-keys vi
set -g mode-keys vi
# set -g status-keys emacs
# set -g mode-keys emacs

# replace C-b by C-a instead of using both prefixes
# set -gu prefix2
# unbind C-a
# unbind C-b
# set -g prefix C-a
# bind C-a send-prefix

# move status line to top
#set -g status-position top

# -- tpm -----------------------------------------------------------------------

# while I don't use tpm myself, many people requested official support so here
# is a seamless integration that automatically installs plugins in parallel

# whenever a plugin introduces a variable to be used in 'status-left' or
# 'status-right', you can use it in 'tmux_conf_theme_status_left' and
# 'tmux_conf_theme_status_right' variables.

# by default, launching tmux will update tpm and all plugins
#   - true (default)
#   - false
tmux_conf_update_plugins_on_launch=true

# by default, reloading the configuration will update tpm and all plugins
#   - true (default)
#   - false
tmux_conf_update_plugins_on_reload=true

# /!\ do not add set -g @plugin 'tmux-plugins/tpm'
# /!\ do not add run '~/.tmux/plugins/tpm/tpm'

# to enable a plugin, use the 'set -g @plugin' syntax:
# visit https://github.com/tmux-plugins for available plugins
#set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'schasse/tmux-jump'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'MunifTanjim/tmux-suspend'
set -g @plugin 'ofirgall/tmux-keyboard-layout'
set -g @plugin 'ofirgall/tmux-browser'
set -g @plugin 'ofirgall/tmux-remote-notify'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '1'
set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"
set -g @suspend_key 'M--'

# colors for tmux-suspend
set -g @suspend_suspended_options " \
  @mode_indicator_custom_prompt:: SUSPENDED , \
"

# -- custom variables ----------------------------------------------------------

# to define a custom #{foo} variable, define a POSIX shell function between the
# '# EOF' and the '# "$@"' lines. Please note that the opening brace { character
# must be on the same line as the function name otherwise the parse won't detect
# it.
#
# then, use #{foo} in e.g. the 'tmux_conf_theme_status_left' or the
# 'tmux_conf_theme_status_right' variables.

# # /!\ do not remove the following line
# EOF
#
# # /!\ do not "uncomment" the functions: the leading "# " characters are needed
#
# weather() {
#   curl -m 1 wttr.in?format=3 2>/dev/null
#   sleep 900 # sleep for 15 minutes, throttle network requests whatever the value of status-interval
# }
#
# online() {
#   ping -c 1 1.1.1.1 >/dev/null 2>&1 && printf '‚úî' || printf '‚úò'
# }
#
# "$@"
# # /!\ do not remove the previous line


#######################################################################################################################################
#														OFIR
#######################################################################################################################################

# Main prefix is C-b
set -g prefix C-b
bind C-b send-prefix
# Unbinding C-a to fix home key (was prefix2 before)
unbind C-a
set -g prefix2 C-Enter

# Using xterm on local and screen on remote
if-shell -b 'test -f "$HOME/.remote_indicator"' 'set -g default-terminal "screen-256color"' 'set -g default-terminal "xterm-256color"'
# Fix end/home for xterm-256color
bind -n End send-key C-e
bind -n Home send-key C-a
bind -T suspended Home send-key C-a
bind -T suspended End send-key C-e


# Default shell
set-option -g default-shell /bin/zsh

# Scroll with Mouse
set -g mouse on

bind r source-file ~/.tmux.conf; display "Reloaded!"

# Splits windows with ALT+e/o
bind -n M-e split-window -h
bind -n M-o split-window -v

# Kill pane with ALT+w
bind -n M-w kill-pane

# Move around panes with alt+arrow
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
bind -n 'M-Left' if-shell "$is_vim" 'send-keys M-Left'  'select-pane -L'
bind -n 'M-Down' if-shell "$is_vim" 'send-keys M-Down'  'select-pane -D'
bind -n 'M-Up' if-shell "$is_vim" 'send-keys M-Up'  'select-pane -U'
bind -n 'M-Right' if-shell "$is_vim" 'send-keys M-Right'  'select-pane -R'

bind -n C-h select-pane -L
bind -n C-l select-pane -R
bind -n C-k select-pane -U
bind -n C-j select-pane -D
bind -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

# Resize pane with ctrl+arrow in prefix (ctrl+a/ctrl+b)
bind -r -T prefix C-Left resize-pane -L 1
bind -r -T prefix C-Down resize-pane -D 1
bind -r -T prefix C-Up resize-pane -U 1
bind -r -T prefix C-Right resize-pane -R 1

# Swap panes with alt+arrow in prefix (ctrl+a/ctrl+b)
bind -r -T prefix M-Left swap-pane -s \{left-of\}
bind -r -T prefix M-Down swap-pane -s \{down-of\}
bind -r -T prefix M-Up swap-pane -s \{up-of\}
bind -r -T prefix M-Right swap-pane -s \{right-of\}

# Override alt+up/down for copy-mode
bind -T copy-mode M-Up select-pane -U
bind -T copy-mode M-Down select-pane -D
bind -T copy-mode M-Right select-pane -R
bind -T copy-mode M-Left select-pane -L
bind -T copy-mode C-h select-pane -L
bind -T copy-mode C-l select-pane -R
bind -T copy-mode C-k select-pane -U
bind -T copy-mode C-j select-pane -D
bind -T copy-mode-vi M-Up select-pane -U
bind -T copy-mode-vi M-Down select-pane -D
bind -T copy-mode-vi M-Right select-pane -R
bind -T copy-mode-vi M-Left select-pane -L
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-l select-pane -R
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-j select-pane -D

# new window ALT+t
bind -n M-t new-window

# Select windows by ALT+N
bind -n M-0 select-window -t :=10
bind -n M-1 select-window -t :=1
bind -n M-2 select-window -t :=2
bind -n M-3 select-window -t :=3
bind -n M-4 select-window -t :=4
bind -n M-5 select-window -t :=5
bind -n M-6 select-window -t :=6
bind -n M-7 select-window -t :=7
bind -n M-8 select-window -t :=8
bind -n M-9 select-window -t :=9

bind -T copy-mode M-0 select-window -t :=10
bind -T copy-mode M-1 select-window -t :=1
bind -T copy-mode M-2 select-window -t :=2
bind -T copy-mode M-3 select-window -t :=3
bind -T copy-mode M-4 select-window -t :=4
bind -T copy-mode M-5 select-window -t :=5
bind -T copy-mode M-6 select-window -t :=6
bind -T copy-mode M-7 select-window -t :=7
bind -T copy-mode M-8 select-window -t :=8
bind -T copy-mode M-9 select-window -t :=9
bind -T copy-mode-vi M-0 select-window -t :=10
bind -T copy-mode-vi M-1 select-window -t :=1
bind -T copy-mode-vi M-2 select-window -t :=2
bind -T copy-mode-vi M-3 select-window -t :=3
bind -T copy-mode-vi M-4 select-window -t :=4
bind -T copy-mode-vi M-5 select-window -t :=5
bind -T copy-mode-vi M-6 select-window -t :=6
bind -T copy-mode-vi M-7 select-window -t :=7
bind -T copy-mode-vi M-8 select-window -t :=8
bind -T copy-mode-vi M-9 select-window -t :=9

# Swap windows by ALT+SHIFT+N
bind -n M-) swap-window -d -t :=10
bind -n M-! swap-window -d -t :=1
bind -n M-@ swap-window -d -t :=2
bind -n M-'#' swap-window -d -t :=3
bind -n M-'$' swap-window -d -t :=4
bind -n M-% swap-window -d -t :=5
bind -n M-^ swap-window -d -t :=6
bind -n M-& swap-window -d -t :=7
bind -n M-* swap-window -d -t :=8
bind -n M-( swap-window -d -t :=9

# Move between windows with ALT+PgUp/Down
bind -n M-PPage select-window -p
bind -n M-NPage select-window -n

bind -T copy-mode M-PPage select-window -p
bind -T copy-mode M-NPage select-window -n

# Copy mode with ALT+C
bind -n M-c copy-mode
# Resume before entering copy mode and suspend after (to copy to host os instead of guest os)
bind -T suspended M-c run-shell "$HOME/.tmux/plugins/tmux-suspend/scripts/resume.sh \"\"" \; set-option -q "@resume_after_copy" "true" \; copy-mode

# Finish copy with Enter and resume if suspended
bind -T copy-mode Enter send-keys -X copy-pipe-and-cancel \; if-shell -b '[ #{@resume_after_copy} = true ]' 'run-shell "$HOME/.tmux/plugins/tmux-suspend/scripts/suspend.sh \"\" \"   @mode_indicator_custom_prompt:: SUSPENDED , \""' \; set-option -q "@resume_after_copy" "false"

# Exit copy mode and resume if suspended
bind -T copy-mode Escape run-shell "tmux     send-keys -X cancel; /home/ogal/.tmux/plugins/tmux-copycat/scripts/copycat_mode_quit.sh; true" \; if-shell -b '[ #{@resume_after_copy} = true ]' 'run-shell "$HOME/.tmux/plugins/tmux-suspend/scripts/suspend.sh \"\" \"   @mode_indicator_custom_prompt:: SUSPENDED , \""' \; set-option -q "@resume_after_copy" "false"

# Start copy with Space
bind -T copy-mode Space send-keys -X begin-selection

# Skip words with C+Left/Right
bind -T copy-mode C-Left send-keys -X previous-word
bind -T copy-mode-vi C-Left send-keys -X previous-word
bind -T copy-mode C-Right send-keys -X next-word-end
bind -T copy-mode-vi C-Right send-keys -X next-word-end

# Page up/down
bind -n C-PPage copy-mode \; send-keys -X page-up
bind -n C-NPage copy-mode \; send-keys -X page-down

# Go to top/bottom with C
bind -n C-Home copy-mode \; send-keys -X history-top
bind -n C-End copy-mode \; send-keys -X history-bottom
bind -T copy-mode C-Home send-keys -X history-top
bind -T copy-mode C-End send-keys -X history-bottom

# Copy word with double click
bind -n DoubleClick1Pane copy-mode -M \; send-keys -X select-word \; run-shell "sleep 0.2" \; send-keys -X copy-pipe-and-cancel

# Copy line with C-double click
bind -n DoubleClick1Pane copy-mode -M \; send-keys -X select-line \; run-shell "sleep 0.2" \; send-keys -X copy-pipe-and-cancel

# Tmux jump (like acejump or vimium) with ALT+j
bind -n M-j run-shell -b $HOME/.tmux/plugins/tmux-jump/scripts/tmux-jump.sh

# Tmux copy cat
# copy digit ALT+d
# bind -n M-d run-shell "$HOME/.tmux/plugins/tmux-copycat/scripts/copycat_mode_start.sh '[[:digit:]]+'"

# copy file ALT+f
unbind -T copy-mode M-f
bind -n M-f run-shell '$HOME/.tmux/plugins/tmux-copycat/scripts/copycat_mode_start.sh "("'"'"'"'"'"'"|'"'"'|^|^\\.|[[:space:]]|[[:space:]]\\.|[[:space:]]\\.\\.|^\\.\\.)[[:alnum:]~_-]*/[][[:alnum:]_.#$%&+=/@-]*"'

# copy git file (after git status) ALT+g
bind -n M-g run-shell "$HOME/.tmux/plugins/tmux-copycat/scripts/copycat_git_special.sh #{pane_current_path}"

# copy url ALT+u
bind -n M-u run-shell "$HOME/.tmux/plugins/tmux-copycat/scripts/copycat_mode_start.sh '(https?://|git@|git://|ssh://|ftp://|file:///)[[:alnum:]?=%/_.:,;~@!#$&()*+-]*'"

# search ALT+/
bind -n M-/ run-shell $HOME/.tmux/plugins/tmux-copycat/scripts/copycat_search.sh

# copy hashes ALT+h
bind -n M-h run-shell "$HOME/.tmux/plugins/tmux-copycat/scripts/copycat_mode_start.sh '\\b([0-9a-f]{7,40}|[[:alnum:]]{52}|[0-9a-f]{64})\\b'"

# copy ip ALT+i
bind -n M-i run-shell "$HOME/.tmux/plugins/tmux-copycat/scripts/copycat_mode_start.sh '[[:digit:]]{1,3}\\.[[:digit:]]{1,3}\\.[[:digit:]]{1,3}\\.[[:digit:]]{1,3}'"

# Open text in google search g
set -g @open-g 'https://www.google.com/search?q='
